{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import {EmailTemplate} from 'email-templates';\nimport nodemailer from 'nodemailer';\nimport path from 'path';\nimport Promise from 'bluebird';\n\nexport default class Mailer {\n  constructor(app) {\n    this.app = app;\n    // this.config = config.get().email.mailer;\n    this.log = this.app.log;\n    this.config = this.app.config;\n\n    this.templatesPath = path.resolve(\n      this.config.paths.server.view,\n      'emails'\n    );\n  }\n\n  *setup() {\n    // create reusable transport method (opens pool of SMTP connections)\n    if (this.config.mailer.type === 'DKIM') {\n      this.transport = nodemailer.createTransport('Sendmail');\n      this.transport.useDKIM(this.config.mailer.options);\n    } else if (this.config.mailer.type === 'SMTP') {\n      this.transport = nodemailer.createTransport(\n        this.config.mailer.options\n      );\n    } else if (this.config.mailer.type === 'plugin') {\n      this.transport = nodemailer.createTransport(\n        this.config.mailer.plugin\n      );\n    }\n\n    this.transport = Promise.promisifyAll(this.transport);\n\n    this.app.mailer = {\n      send: this.send.bind(this),\n      batch: this.batch.bind(this)\n    };\n  }\n\n  tearDown() {\n    // if you don't want to use this transport object anymore\n    this.transport.close(); // shut down the connection pool, no more messages\n  }\n\n  /**\n    this.mailer.send(\n      {\n          from: 'Kieve Chua ✔ <kievechua@example.com>', // sender address\n          to: 'bruce@example.com', // list of receivers\n          subject: 'Hello ✔' // Subject line\n      },\n      'welcome',\n      {\n          user: 'Kieve Chua'\n      }\n    );\n  */\n  *send(mailOptions, templateName, locals = {}) {\n    let template = new EmailTemplate(`${this.templatesPath}/${templateName}`);\n    let { html, text } = yield template.render(locals);\n\n    mailOptions.text = text; // plain text body\n    mailOptions.html = html; // html body\n\n    // send mail with defined transport object\n    let response = yield this.transport.sendMailAsync(mailOptions);\n\n    if (this.config.mailer.type === 'Direct') {\n      return yield new Promise((resolve, reject) => {\n        // response.statusHandler only applies to 'direct' self.transport\n        response.statusHandler.once('failed', (data) => {\n          this.log.warn(\n            'Permanently failed delivering message to %s with the following response: %s',\n            data.domain, data.response\n          );\n\n          reject(data);\n        });\n\n        response.statusHandler.once('requeue', (data) => {\n          this.log.info('Temporarily failed delivering message to %s', data.domain);\n        });\n\n        response.statusHandler.once('sent', (data) => {\n          this.log.info('Message was accepted by %s', data.domain);\n\n          resolve(data);\n        });\n      });\n    } else {\n      // this.log.info('Message is sent: ' + response.messageId);\n      return response;\n    }\n  }\n\n  /**\n    this.mailer.batch({\n        from: 'Kieve Chua ✔ <kievechua@example.com>', // sender address\n        subject: 'Hello ✔' // Subject line\n      },\n      'spam', [{\n        to: 'clark@example.com',\n        locals: {\n          user: 'Superman'\n        }\n      }, {\n        to: 'bruce@example.com',\n        locals: {\n          user: 'Batman'\n        }\n      }]\n    );\n  */\n  batch(mailOptions, templateName, locals) {\n    // Load the template and send the emails\n    // Custom function for sending emails outside the loop\n    var Render = function(mailOptions, to, locals) {\n      this.locals = locals;\n      this.send = function(err, html, text) {\n        if (err) {\n          this.log.log(err);\n        } else {\n          mailOptions.to = to; // plaintext body\n          mailOptions.text = text; // plaintext body\n          mailOptions.html = html; // html body\n\n          return this.transport.sendMailAsync(mailOptions)\n            .then(function(response) {\n              if (this.config.type === 'Direct') {\n                var deferred = Promise.defer();\n\n                // response.statusHandler only applies to 'direct' this.transport\n                response.statusHandler.once('failed', function(data) {\n                  this.log.warn(\n                    'Permanently failed delivering message to %s with the following response: %s',\n                    data.domain, data.response\n                  );\n\n                  deferred.reject(data);\n                });\n\n                response.statusHandler.once('requeue', function(data) {\n                  this.log.log('Temporarily failed delivering message to %s', data.domain);\n                });\n\n                response.statusHandler.once('sent', function(data) {\n                  this.log.log('Message was accepted by %s', data.domain);\n                  deferred.resolve(data);\n                });\n\n                return deferred.promise;\n              } else {\n                this.log.log('Message is sent: ' + response.message);\n              }\n            })\n            .error(function error(err) {\n              this.log.error(err);\n            })\n            .catch(function(err) {\n              this.log.error(err);\n            });\n        }\n      };\n      this.batch = function(batch) {\n        batch(this.locals, this.templatesPath, this.send);\n      };\n    };\n\n    return emailTemplates(this.templatesPath)\n      .then(function then(template) {\n        // Better way to promisify template?\n        var deferred = Promise.defer();\n        template(templateName, true, deferred.callback);\n        return deferred.promise;\n      })\n      .then(function then(batch) {\n        for (var local in locals) {\n          if (locals.hasOwnProperty(local)) {\n            var render = new Render(mailOptions, locals[local].to, locals[local].locals);\n            render.batch(batch);\n          }\n        }\n      });\n  }\n}\n"],"sourceRoot":"/source/"}